#!/usr/bin/env node

/**
 * Deploy to Vercel - The Easiest Way
 */

const { execSync } = require('child_process');
const fs = require('fs');

// Colors for console output
const colors = {
  reset: '\x1b[0m',
  bright: '\x1b[1m',
  red: '\x1b[31m',
  green: '\x1b[32m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  cyan: '\x1b[36m'
};

function log(message, color = 'reset') {
  console.log(`${colors[color]}${message}${colors.reset}`);
}

function logStep(step, message) {
  log(`[${step}] ${message}`, 'cyan');
}

function logSuccess(message) {
  log(`‚úì ${message}`, 'green');
}

function logWarning(message) {
  log(`‚ö† ${message}`, 'yellow');
}

function logError(message) {
  log(`‚úó ${message}`, 'red');
}

// Create Vercel configuration
function createVercelConfig() {
  logStep('CONFIG', 'Creating Vercel configuration...');
  
  const vercelConfig = {
    "name": "internship-management-system",
    "version": 2,
    "builds": [
      {
        "src": "package.json",
        "use": "@vercel/next"
      }
    ],
    "env": {
      "NEXT_PUBLIC_APP_NAME": "Internship Management System",
      "NEXT_PUBLIC_APP_ENV": "production",
      "NEXT_PUBLIC_ENABLE_PUSH_NOTIFICATIONS": "false",
      "NEXT_PUBLIC_ENABLE_OFFLINE_NOTIFICATIONS": "true",
      "NEXT_PUBLIC_ENABLE_PWA": "true"
    },
    "regions": ["sin1"],
    "functions": {
      "app/api/**/*.js": {
        "maxDuration": 30
      }
    }
  };
  
  fs.writeFileSync('vercel.json', JSON.stringify(vercelConfig, null, 2));
  logSuccess('Vercel configuration created');
}

// Create deployment instructions
function createDeployInstructions() {
  logStep('DOCS', 'Creating deployment instructions...');
  
  const instructions = `# Deploy to Vercel - Easy Way! üöÄ

## ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£ Deploy:

### 1. Install Vercel CLI
\`\`\`bash
npm install -g vercel
\`\`\`

### 2. Login to Vercel
\`\`\`bash
vercel login
# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å GitHub account
\`\`\`

### 3. Deploy
\`\`\`bash
# Deploy ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
vercel

# ‡∏´‡∏£‡∏∑‡∏≠ deploy production ‡πÄ‡∏•‡∏¢
vercel --prod
\`\`\`

### 4. Setup Auto Deploy
1. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà https://vercel.com/dashboard
2. ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° GitHub repository
3. ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà push ‡∏à‡∏∞ auto deploy

## ‡∏Ç‡πâ‡∏≠‡∏î‡∏µ‡∏Ç‡∏≠‡∏á Vercel:
- ‚úÖ Deploy ‡∏á‡πà‡∏≤‡∏¢‡∏°‡∏≤‡∏Å (1 ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á)
- ‚úÖ Auto deploy ‡∏à‡∏≤‡∏Å GitHub
- ‚úÖ SSL certificate ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
- ‚úÖ CDN global
- ‚úÖ ‡∏ü‡∏£‡∏µ!

## ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å Deploy:
- ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏à‡∏∞‡πÑ‡∏î‡πâ URL ‡πÅ‡∏ö‡∏ö: https://internship-xxx.vercel.app
- ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏±‡πâ‡∏á custom domain ‡πÑ‡∏î‡πâ

## ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Backend:
- Vercel ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö frontend
- Backend ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏ä‡πâ Railway ‡∏´‡∏£‡∏∑‡∏≠ Render
- ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ VPS ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà

---
**‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:** ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ô‡∏µ‡πâ‡∏á‡πà‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö frontend deployment!
`;
  
  fs.writeFileSync('VERCEL_DEPLOY.md', instructions);
  logSuccess('Deployment instructions created');
}

// Main function
async function main() {
  log('üöÄ Vercel Deployment Setup', 'bright');
  log('The easiest way to deploy!', 'blue');
  log('=' .repeat(40), 'blue');
  
  try {
    // Create Vercel config
    createVercelConfig();
    
    // Create instructions
    createDeployInstructions();
    
    log('', 'reset');
    log('‚úÖ Vercel deployment setup completed!', 'green');
    log('', 'reset');
    log('üöÄ Ready to deploy:', 'bright');
    log('', 'reset');
    log('1. Install Vercel CLI:', 'yellow');
    log('   npm install -g vercel', 'cyan');
    log('', 'reset');
    log('2. Deploy:', 'yellow');
    log('   vercel --prod', 'cyan');
    log('', 'reset');
    log('üìö Full instructions: VERCEL_DEPLOY.md', 'blue');
    log('', 'reset');
    log('üí° Why Vercel?', 'bright');
    log('‚úì Deploy ‡πÉ‡∏ô 1 ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á', 'green');
    log('‚úì Auto deploy ‡∏à‡∏≤‡∏Å GitHub', 'green');
    log('‚úì SSL + CDN ‡∏ü‡∏£‡∏µ', 'green');
    log('‚úì ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ server', 'green');
    
  } catch (error) {
    logError(`Setup failed: ${error.message}`);
    process.exit(1);
  }
}

// Run the script
if (require.main === module) {
  main();
}

module.exports = {
  createVercelConfig,
  createDeployInstructions
};